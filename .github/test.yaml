name: test

on: [push, pull_request]

jobs:
  test-matrix:

    strategy:
      matrix:
        operating-system: [ubuntu-18.04, windows-2019, macOS-10.14]

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Disable EOL conversions
        run: git config --global core.autocrlf false
      - name: install ubuntu deps
        run: |
          sudo apt remove python-cryptography
          sudo apt remove python3-cryptography
          sudo apt autoremove
          apt show python-cryptography 
          sudo apt install libsecret-1-dev dbus dbus-x11 gnome-keyring libdbus-glib-1-dev python3-setuptools
          sudo pip3 install secretstorage keyring #dbus-python
          export DISPLAY=“:0.0”
          eval "$(dbus-launch --sh-syntax)"
          mkdir -p ~/.cache
          mkdir -p ~/.local/share/keyrings
          eval $(gnome-keyring-daemon --start)
          echo "asd" | dbus-launch $(which keyring) -p ~/.local/share/keyrings/login.keyring set "test" "username"
          #dbus-launch /usr/bin/python -c "import keyring; keyring.get_keyring(); keyring.set('test', 'username', 'password')"
          #dbus-launch /usr/bin/python -c "import gnomekeyring; gnomekeyring.create_sync('login', '');"
        if: matrix.operating-system == 'ubuntu-18.04'

      - name: Checkout
        uses: actions/checkout@master

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'

      # - name: Install Go deps
      #   run: |
      #     go get github.com/golangci/govet
      #     go get golang.org/x/lint/golint

      # - name: Install Taskfile
      #   uses: Arduino/actions/setup-taskfile@master

      - name: Build the CLI
        # run: task build
        run: go build

      - name: Run ubuntu unit tests
        # run: task test-unit
        # Run `graph auth` inside `dbus-launch` to be able to access gnome-keyring
        run: dbus-launch bash -c 'go test -v'
        if: matrix.operating-system == 'ubuntu-18.04'
      - name: Run other unit tests
        # run: task test-unit
        run: go test -v

      - name: Send unit tests coverage to Codecov
        # Since secrets aren't available on forks, we only
        # upload coverage on `push`. This might change if
        # Codecov whitelists GitHub, lifting the need
        # for a token.
        if: >
          matrix.operating-system != 'windows-2019' &&
          matrix.operating-system != 'macOS-10.14' &&
          github.event_name == 'push'
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage_unit.txt
          flags: unit

