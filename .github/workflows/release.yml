---
name: build release artefacts

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: get tag annotation
        run: echo "::set-output name=content::$(git tag --format='%(contents)' -n2 ${{ github.ref }})"
        id: notes

      - name: check for prerelease
        # NOTE: if tag contains a - is a semver prerelease
        run: echo "::set-output name=flag::$(grep '-' ${{github.ref}} && echo --prerelease)"
        id: prerelease

      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::$(echo ${{ github.ref }} | cut -d / -f 3)

      - name: create release
        run: gh release create ${{ steps.get_version.outputs.version }} --draft --title ${{ steps.get_version.outputs.version }} ${{steps.prerelease.outputs.flag}} --notes '${{ steps.notes.outputs.content }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: create-release
    strategy:
      matrix:
        operating-system: [ubuntu-20.04, windows-2019, macOS-10.14]
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: gather versions
        uses: ./.github/actions/parse-asdf

      - name: install Go
        uses: actions/setup-go@v1
        with:
          go-version: "${{ env.GOLANG_VERSION }}"

      - name: Build the CLI
        run: go build -trimpath --ldflags "-X main.version=${{ needs.create-release.outputs.version }}" -o 2ami-${{ needs.create-release.outputs.version }}-${{ matrix.operating-system }}

      - name: upload to release
        run: gh release upload ${{ needs.create-release.outputs.version }} ./2ami-${{ needs.create-release.outputs.version }}-${{ matrix.operating-system }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: upload to release (linux)
      #   if: "startsWith(runner.os, 'Linux')"
      #   run: gh release upload ${{ needs.create-release.outputs.version }} ./2ami-${{ needs.create-release.outputs.version }}-${{ matrix.operating-system }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 
      # - name: upload to release (macos)
      #   if: "startsWith(runner.os, 'macOS')"
      #   run: gh release upload ${{ needs.create-release.outputs.version }} ./2ami-${{ needs.create-release.outputs.version }}-${{ matrix.operating-system }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 
      # - name: upload to release (windows)
      #   if: "startsWith(runner.os, 'Windows')"
      #   run: gh release upload ${{ needs.create-release.outputs.version }} ./2ami-${{ needs.create-release.outputs.version }}-${{ matrix.operating-system }}.exe
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 
